{"version":3,"sources":["assets/noPosterSamll.png","api.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Header.js","Components/Video.js","Components/Seasons.js","Components/Companies.js","Components/Countries.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["api","axios","create","baseURL","params","api_key","language","moviesApi","get","id","append_to_response","term","query","encodeURIComponent","tvApi","Container","styled","div","Title","span","Grid","Section","title","children","role","aria-label","Text","props","color","Message","text","Image","bgImage","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","isMovie","to","require","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Helmet","Loader","map","movie","poster_path","original_title","vote_average","release_date","HomeContainer","state","a","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","console","log","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Type","button","Name","Videos","videos","video","onClick","window","open","key","type","name","Content","Seasons","seasons","season","Companies","companies","company","logo_path","Countries","countries","country","Backdrop","Cover","Data","h3","ItemContainer","Divider","Overview","p","ImdbButton","TabGroup","TabItem","active","TabLink","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","imdb_id","overview","path","Video","production_companies","production_countries","propTypes","PropTypes","object","bool","isRequired","string","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","request","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fe34f217.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSamll.026b4951.png\";","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"5446b4c3a9663fc988cc1667d3f21b7a\",\n    language: \"en-US\"\n  }\n});\n\nexport const moviesApi = {\n    nowPlaying: () => api.get(\"movie/now_playing\"),\n    upcoming: () => api.get(\"movie/upcoming\"),\n    popular: () => api.get(\"movie/popular\"),\n    movieDetail: id => \n        api.get(`movie/${id}`,{\n            params: {\n                append_to_response: \"videos\"\n            }\n        }),\n    search: term => \n        api.get(\"search/movie\",{\n            params: {\n                query: encodeURIComponent(term)\n            }\n        })\n};\n\nexport const tvApi = {\n    topRated: () => api.get(\"tv/top_rated\"),\n    popular: () => api.get(\"tv/popular\"),\n    airingToday: () => api.get(\"tv/airing_today\"),\n    showDetail: id =>\n        api.get(`tv/${id}`,{\n            params: {\n                append_to_response: \"videos\",\n            }\n        }),\n    search: term =>\n        api.get(\"search/tv\",{\n            params:{\n                query: encodeURIComponent(term)\n            }\n        })\n};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child){\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({title, children})=>(\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n};\n\nexport default Section;\n\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 28px;\n`;\n\nexport default () =>(\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      ⏰\n    </span>\n  </Container>\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${props => props.color};\n`;\n\nconst Message = ({text, color})=>(\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text:PropTypes.string.isRequired,\n  color:PropTypes.string.isRequired,\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport {Link} from \"react-router-dom\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  backgounrd-image: url(${props=> props.bgImage});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image}{\n      opacity: 0.3;\n    }\n    ${Rating}{\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255,255,255,0.5);\n`;\n\nconst Poster = ({id, imageUrl, title, rating, year, isMovie=false})=>(\n  <Link to={isMovie?`/movie/${id}`:`/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgImage={\n          imageUrl\n            ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n            : require(\"../assets/noPosterSamll.png\")\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            🌟\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length>18?`${title.substring(0,18)}...`:title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n\n  </Link>\n);\n\nPoster.propTypes = {\n  id:PropTypes.number.isRequired,\n  imageUrl:PropTypes.string,\n  title:PropTypes.string.isRequired,\n  rating:PropTypes.number,\n  year:PropTypes.string,\n  isMovie:PropTypes.bool,\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  padding:  20px;\n`;\n\nconst HomePresenter = ({nowPlaying, popular, upcoming, loading, error}) =>\n  <>\n    <Helmet>\n      <title>Moviex | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader/>\n    ) : (\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}/>\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming Movies\">\n            {upcoming.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}/>\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}/>\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error}/>}\n      </Container>\n    )}\n  </>\n;\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  popular: PropTypes.array,\n  upcoming: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default HomePresenter;\n","import HomeContainer from './HomeContainer';\n\nexport default HomeContainer;","import React from \"react\";\nimport { moviesApi } from \"../../api\";\nimport HomePresenter from \"./HomePresenter\";\n\nexport default class extends React.Component{\n    state={\n        nowPlaying: null,\n        upcoming: null,\n        popular: null,\n        error: null,\n        loading: true,\n    };\n\n    async componentDidMount() {\n        try{\n            const{\n                data: {results: nowPlaying}\n            } = await moviesApi.nowPlaying();\n            const{\n                data: {results: upcoming}\n            } = await moviesApi.upcoming();\n            const{\n                data: {results: popular}\n            } = await moviesApi.popular();\n            this.setState({\n                nowPlaying, upcoming, popular\n            });\n\n        }catch{\n            this.setState({error: \"Can't find movie information.\"});\n        }finally{\n            this.setState({loading: false});\n        }\n    }\n\n    render(){\n        const {nowPlaying, upcoming, popular, error, loading} = this.state;\n        return (\n            <HomePresenter\n                nowPlaying={nowPlaying}\n                upcoming={upcoming}\n                popular={popular}\n                error={error}\n                loading={loading}\n            />\n        );\n    }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"../../Components/Loader\";\nimport Section from \"../../Components/Section\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({topRated, popular, airingToday, loading, error}) =>\n  <>\n    <Helmet>\n      <title>TV Shows | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader/>\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error}/>}\n      </Container>\n    )}\n  </>\n;\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default TVPresenter;\n","import TVContainer from './TVContainer';\n\nexport default TVContainer;","import React from \"react\";\nimport { tvApi } from \"../../api\";\nimport TVPresenter from \"./TVPresenter\";\n\nexport default class extends React.Component{\n    state={\n        topRated: null,\n        popular: null,\n        airingToday: null,\n        error: null,\n        loading: true,\n    };\n\n    async componentDidMount() {\n        try{\n            const{\n                data: {results: topRated}\n            } = await tvApi.topRated();\n            const{\n                data: {results: popular}\n            } = await tvApi.popular();\n            const{\n                data: {results: airingToday}\n            } = await tvApi.airingToday();\n            this.setState({\n                topRated,popular, airingToday\n            });\n\n        }catch{\n            this.setState({error: \"Can't find TV information.\"});\n        }finally{\n            this.setState({loading: false});\n        }\n    }\n\n    render(){\n        const {topRated, popular, airingToday, error, loading} = this.state;\n        console.log(this.state);\n        return (\n            <TVPresenter\n                topRated={topRated}\n                airingToday={airingToday}\n                popular={popular}\n                error={error}\n                loading={loading}\n            />\n        );\n    }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"../../Components/Loader\";\nimport Section from \"../../Components/Section\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\n\nconst SearchPresenter = ({movieResults,tvResults,searchTerm,handleSubmit, loading, error, updateTerm}) => (\n  <Container>\n    <Helmet>\n      <title>Search | Nomfilx</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies or TV Shows...\"\n        value={searchTerm}\n        onChange={updateTerm}\n      />\n    </Form>\n    {loading?(<Loader/>):\n      (\n        <>\n          {movieResults&&movieResults.length>0&&(\n            <Section title=\"Movie Results\">\n              {movieResults.map(movie=>(\n                <Poster\n                  key={movie.id}\n                  id={movie.id}\n                  imageUrl={movie.poster_path}\n                  title={movie.original_title}\n                  rating={movie.vote_average}\n                  year={movie.release_date.substring(0, 4)}\n                  isMovie={true}/>\n              ))}\n            </Section>\n          )}\n          {tvResults&&tvResults.length>0&&(\n            <Section title=\"TV Show Results\">\n              {tvResults.map(show=>(\n                <Poster\n                  key={show.id}\n                  id={show.id}\n                  imageUrl={show.poster_path}\n                  title={show.original_name}\n                  rating={show.vote_average}\n                  year={show.first_air_date.substring(0, 4)}\n                />\n              ))}\n            </Section>\n          )}\n          {error&&<Message color=\"#e74c3c\" text={error}/>}\n          {tvResults&&movieResults&&tvResults.length===0&&movieResults.length===0&&(\n            <Message color=\"#95a5a6\" text=\"Nothing found\"/>\n          )}\n        </>\n      )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  searchTerm: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default SearchPresenter;\n","import SearchContainer from './SearchContainer';\n\nexport default SearchContainer;","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport {moviesApi, tvApi} from \"../../api\";\n\nexport default class extends React.Component{\n    state={\n        movieResults: null,\n        tvResults: null,\n        searchTerm: \"\",\n        error: null,\n        loading: false,\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const {searchTerm} = this.state;\n        if(searchTerm!==\"\"){\n            this.searchByTerm();\n        }\n    }\n\n    updateTerm = event =>{\n        const {target: {value}} = event;\n        this.setState({ searchTerm: value});\n    };\n\n    searchByTerm = async ()=> {\n        const {searchTerm} = this.state;\n        this.setState({loading: true});\n        try{\n            const {\n                data: {results: movieResults}\n            } = await moviesApi.search(searchTerm);\n            const {\n                data: {results: tvResults}\n            } = await tvApi.search(searchTerm);\n            this.setState({\n                movieResults,\n                tvResults\n            });\n        }catch{\n            this.setState({\n                error: \"Can't find results.\"\n            });\n        }finally{\n            this.setState({\n                loading: false\n            });\n        }\n\n    }\n\n    render(){\n        const {movieResults, tvResults, searchTerm, error, loading} = this.state;\n        return (\n            <SearchPresenter\n                movieResults={movieResults}\n                tvResults={tvResults}\n                searchTerm={searchTerm}\n                error={error}\n                loading={loading}\n                handleSubmit={this.handleSubmit}\n                updateTerm={this.updateTerm}\n            />\n        );\n    }\n}\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n    color: white;\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    width: 100%;\n    height: 50px;\n    display: flex;\n    align-items: center;\n    background-color: rgba(20,20,20,0.8);\n    z-index: 10;\n    box-shadow: 0px 1px 5px 2px rgba(0,0,0,0.8);\n`;\n\nconst List = styled.ul`\n    display: flex;\n`;\n\nconst Item = styled.li`\n    width: 80px;\n    height:50px;\n    text-align: center;\n    border-bottom: 3px solid\n        ${props => (props.current ? \"#3498db\" : \"transparent\")};\n    transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n    height: 50px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport default withRouter(({location: {pathname}})=>(\n    <Header>\n        <List>\n            <Item current={ pathname === \"/\" }>\n                <SLink to=\"/\">Movies</SLink>\n            </Item>\n            <Item current={ pathname === \"/tv\" }>\n                <SLink to=\"/tv\">TV</SLink>\n            </Item>\n            <Item current={ pathname === \"/search\" }>\n                <SLink to=\"/search\">Search</SLink>\n            </Item>\n        </List>\n    </Header>\n));","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst Container = styled.div`\n  padding: 10px;\n`;\nconst Item = styled.div``;\nconst Type = styled.button`\nbackground-color: black;\n:hover{\n  background-color: cornflowerblue;\n}\ncolor: white;\nborder: 3px solid cornflowerblue;\nborder-radius: 10px;\nmargin: 5px;\npadding: 10px;\nfont-size: 15px;\ncursor:pointer;\n`;\nconst Name = styled.span``;\n\nconst Videos = ({videos}) => (\n  <Container>\n    {videos.length > 0 ? videos.map((video) => (\n      <Item>\n        <Type onClick={() =>\n          window.open(\n            `https://www.youtube.com/watch?v=${video.key}`,\n            \"_blank\"\n          )\n        }>Watch {video.type ? video.type : ''}</Type>\n        <Name>{video.name ? video.name : ''}</Name>\n      </Item>\n    )) : 'Can not find Videos'\n    }\n  </Container>\n);\n\nVideos.propTypes = {\n  videos: PropTypes.object,\n};\n\nexport default Videos;\n\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst Container = styled.div`\n  padding: 10px;\n  height: 100vmin;\n  width: 100vmin;\n`;\nconst Content = styled.div`\n  height:200px;\n  margin-bottom: 40px;\n  display: flex;\n  align-items: center;\n`;\n\nconst Image = styled.div`\n  width: 200px;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 200px;\n  border-radius: 5px;\n  margin-right: 20px;\n`;\nconst Name = styled.span`\n  font-size: 15px;\n  font-weight: 500;\n`;\n\nconst Seasons = ({seasons}) => (\n  <Container>\n    {seasons.length > 0 ? seasons.map((season) => (\n      <Content>\n        <Image\n          bgImage={\n            season.poster_path\n              ? `https://image.tmdb.org/t/p/w200${season.poster_path}`\n              : require(\"../assets/noPosterSamll.png\")\n          }\n        />\n        <Name>{season.name ? season.name : ''}</Name>\n      </Content>\n    )) : 'Can not find Seasons'\n    }\n  </Container>\n);\n\nSeasons.propTypes = {\n  seasons: PropTypes.object,\n};\n\nexport default Seasons;\n\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst Container = styled.div`\n  padding: 10px;\n  height: 100vmin;\n  width: 100vmin;\n`;\nconst Content = styled.div`\n  height:200px;\n  margin-bottom: 40px;\n  display: flex;\n  align-items: center;\n`;\n\nconst Image = styled.div`\n  width: 200px;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 200px;\n  border-radius: 5px;\n  margin-right: 20px;\n`;\nconst Name = styled.span`\n  font-size: 15px;\n  font-weight: 500;\n`;\n\nconst Companies = ({companies}) => (\n  <Container>\n    {companies.length > 0 ? companies.map((company) => (\n      <Content>\n        <Image\n          bgImage={\n            company.logo_path\n              ? `https://image.tmdb.org/t/p/w200${company.logo_path}`\n              : require(\"../assets/noPosterSamll.png\")\n          }\n        />\n        <Name>{company.name ? company.name : ''}</Name>\n      </Content>\n    )) : 'Can not find Companies'\n    }\n  </Container>\n);\n\nCompanies.propTypes = {\n  companies: PropTypes.object,\n};\n\nexport default Companies;\n\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst Container = styled.div`\n  padding: 10px;\n`;\nconst Title = styled.div`\nfont-size: 17px;\nfont-weight: 600;\nmargin-bottom: 10px;\n`;\nconst Name = styled.div`\nfont-size: 16px;\nmargin-bottom: 5px;\n`;\n\nconst Countries = ({countries}) => (\n  <Container>\n    <Title>Production Countries</Title>\n    {countries.length>0?countries.map((country) => (\n      <>\n        <Name>✅ {country.name?country.name:''}</Name>\n      </>\n    )):'Can not find Countries'\n    }\n  </Container>\n);\n\nCountries.propTypes = {\n  countries: PropTypes.object,\n};\n\nexport default Countries;\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"../../Components/Loader\";\nimport Helmet from \"react-helmet\";\nimport {Route, Link, withRouter} from \"react-router-dom\";\nimport Video from \"../../Components/Video\";\nimport Seasons from \"../../Components/Seasons\";\nimport Companies from \"../../Components/Companies\";\nimport Countries from \"../../Components/Countries\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  z-index: 3;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst ImdbButton = styled.button`\n  background-color: #ffd711;\n  color: black;\n  border-radius: 5px;\n  padding: 7px;\n  font-weight: 600;\n  margin-left: 15px;\n`;\nconst TabGroup = styled.ul`\n  display: flex;\n  margin-top: 15px;\n`;\nconst TabItem = styled.li`\n  width: 120px;\n    height:40px;\n    text-align: center;\n    border-top-left-radius: 5px;\n    border-top-right-radius: 5px;\n    background-color: ${props => (props.active ? \"#3498db\" : \"transparent\")};\n    border-bottom: 3px solid white;\n    transition: background-color 0.5s ease-in-out;\n`;\n\nconst TabLink = styled(Link)`\n    height: 40px;\n    font-size: 15px;\n    text-transform: uppercase;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst DetailPresenter = withRouter(\n  ({location: {pathname}, result, loading, error}) =>\n    loading ? (\n      <>\n        <Helmet>\n          <title>Loading | Nomflix</title>\n        </Helmet>\n        <Loader/>\n      </>\n    ) : (\n      <Container>\n        <Helmet>\n          <title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}{\" \"}\n            | Nomfilix\n          </title>\n        </Helmet>\n        <Backdrop\n          bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n        />\n        <Content>\n          <Cover\n            bgImage={\n              result.poster_path\n                ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n                : require(\"../../assets/noPosterSamll.png\")\n            }\n          />\n          <Data>\n            <Title>\n              {result.original_title\n                ? result.original_title\n                : result.original_name}\n            </Title>\n            <ItemContainer>\n              <Item>\n                {result.release_date\n                  ? result.release_date.substring(0.4)\n                  : result.first_air_date.substring(0, 4)}\n              </Item>\n              <Divider>•</Divider>\n              <Item>\n                {result.runtime ? result.runtime : result.episode_run_time[0]}{\" \"}\n                min\n              </Item>\n              <Divider>•</Divider>\n              <Item>\n                {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n              </Item>\n              <Item>\n                <ImdbButton\n                  onClick={() =>\n                    window.open(\n                      `https://www.imdb.com/title/${result.imdb_id}`,\n                      \"_blank\"\n                    )\n                  }\n                >\n                  {result.imdb_id ? \"IMDB\" : \"No IMDB\"}\n                </ImdbButton>\n              </Item>\n            </ItemContainer>\n            <Overview>{result.overview}</Overview>\n\n            <TabGroup>\n              <TabItem\n                active={\n                  result.original_title\n                    ? pathname === `/movie/${result.id}/videos`\n                    : pathname === `/show/${result.id}/videos`\n                }\n              >\n                <TabLink\n                  to={\n                    result.original_title\n                      ? `/movie/${result.id}/videos`\n                      : `/show/${result.id}/videos`\n                  }\n                >\n                  videos\n                </TabLink>\n              </TabItem>\n              <TabItem\n                active={\n                  result.original_title\n                    ? pathname === `/movie/${result.id}/companies`\n                    : pathname === `/show/${result.id}/companies`\n                }\n              >\n                <TabLink\n                  to={\n                    result.original_title\n                      ? `/movie/${result.id}/companies`\n                      : `/show/${result.id}/companies`\n                  }\n                >\n                  companies\n                </TabLink>\n              </TabItem>\n              <TabItem\n                active={\n                  result.original_title\n                    ? pathname === `/movie/${result.id}/countries`\n                    : pathname === `/show/${result.id}/countries`\n                }\n              >\n                <TabLink\n                  to={\n                    result.original_title\n                      ? `/movie/${result.id}/countries`\n                      : `/show/${result.id}/countries`\n                  }\n                >\n                  countries\n                </TabLink>\n              </TabItem>\n              {result.original_title ? (\n                \"\"\n              ) : (\n                <TabItem\n                  active={\n                    result.original_title\n                      ? pathname === `/movie/${result.id}/seasons`\n                      : pathname === `/show/${result.id}/seasons`\n                  }\n                >\n                  <TabLink\n                    to={\n                      result.original_title\n                        ? `/movie/${result.id}/seasons`\n                        : `/show/${result.id}/seasons`\n                    }\n                  >\n                    seasons\n                  </TabLink>\n                </TabItem>\n              )}\n            </TabGroup>\n            <Route\n              path={[\"/movie/:id/videos\", \"/show/:id/videos\"]}\n              children={<Video videos={result.videos.results}/>}\n            />\n            <Route\n              path={[\"/movie/:id/companies\", \"/show/:id/companies\"]}\n              children={<Companies companies={result.production_companies}/>}\n            />\n            <Route\n              path={[\"/movie/:id/countries\", \"/show/:id/countries\"]}\n              children={<Countries countries={result.production_countries}/>}\n            />\n            <Route\n              path=\"/show/:id/seasons\"\n              children={<Seasons seasons={result.seasons}/>}\n            />\n          </Data>\n        </Content>\n      </Container>\n    )\n);\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default DetailPresenter;\n","import DetailContainer from './DetailContainer'\n\nexport default DetailContainer;","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport {moviesApi, tvApi} from \"../../api\";\n\nexport default class extends React.Component {\n    constructor(props) {\n        super(props);\n        const{\n            location:{pathname}\n        } = props;\n        this.state = {\n            result: null,\n            error: null,\n            loading: true,\n            isMovie: pathname.includes(\"/movie/\")\n        };\n    }\n\n\n    async componentDidMount() {\n        const {\n            match:{\n                params:{ id }\n            },\n            history: { push }\n        } = this.props;\n        const{isMovie} = this.state;\n        const parsedId = parseInt(id);\n        if(isNaN(parsedId)){\n            return push(\"/\");\n        }\n\n        let result=null;\n        try{\n            if(isMovie) {\n                const request = await moviesApi.movieDetail(parsedId);\n                result = request.data;\n            }else{\n                ({data:result} = await tvApi.showDetail(parsedId));\n            }\n            this.setState({result});\n\n        }catch{\n            this.setState({error: \"Can't find anything.\"});\n        }finally{\n            this.setState({loading: false, result});\n        }\n    }\n\n    render(){\n        const {result, error, loading} = this.state;\n        return (\n            <DetailPresenter\n                result={result}\n                error={error}\n                loading={loading}\n            />\n        );\n    }\n}\n","import React from \"react\";\nimport { HashRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport Home from '../Routes/Home/index'\nimport TV from '../Routes/TV/index'\nimport Search from '../Routes/Search/index'\nimport Header from '../Components/Header'\nimport Detail from \"../Routes/Detail/index\"\n\nexport default () => (\n    <Router>\n        <Header />\n        <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/tv\" exact component={TV} />\n            <Route path=\"/search\" component={Search} />\n            <Route path=\"/movie/:id\" component={Detail} />\n            <Route path=\"/show/:id\" component={Detail} />\n            <Redirect from=\"*\" to=\"/\" />\n        </Switch>\n    </Router>\n)\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset}\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing: border-box;\n    }\n    body{\n        font-family:--apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:12px;\n        background-color:rgba(20,20,20,1);\n        color:white;\n        padding-top:50px;\n    }\n`;\nexport default globalStyles;\n","import React, {Component} from \"react\";\nimport Router from \"./Router\"\nimport GlobalStyles from \"../Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}